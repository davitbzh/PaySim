/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.paysim.paysim.avro.generated;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Transaction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 189794088356308208L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Transaction\",\"namespace\":\"org.paysim.paysim.avro.generated\",\"fields\":[{\"name\":\"step\",\"type\":\"int\"},{\"name\":\"action\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"amount\",\"type\":\"double\"},{\"name\":\"nameOrig\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"oldBalanceOrig\",\"type\":\"double\"},{\"name\":\"newBalanceOrig\",\"type\":\"double\"},{\"name\":\"nameDest\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"oldBalanceDest\",\"type\":\"double\"},{\"name\":\"newBalanceDest\",\"type\":\"double\"},{\"name\":\"isFraud\",\"type\":\"boolean\"},{\"name\":\"isFlaggedFraud\",\"type\":\"boolean\"},{\"name\":\"isUnauthorizedOverdraft\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Transaction> ENCODER =
      new BinaryMessageEncoder<Transaction>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Transaction> DECODER =
      new BinaryMessageDecoder<Transaction>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Transaction> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Transaction> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Transaction>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Transaction to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Transaction from a ByteBuffer. */
  public static Transaction fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int step;
   private java.lang.String action;
   private double amount;
   private java.lang.String nameOrig;
   private double oldBalanceOrig;
   private double newBalanceOrig;
   private java.lang.String nameDest;
   private double oldBalanceDest;
   private double newBalanceDest;
   private boolean isFraud;
   private boolean isFlaggedFraud;
   private boolean isUnauthorizedOverdraft;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Transaction() {}

  /**
   * All-args constructor.
   * @param step The new value for step
   * @param action The new value for action
   * @param amount The new value for amount
   * @param nameOrig The new value for nameOrig
   * @param oldBalanceOrig The new value for oldBalanceOrig
   * @param newBalanceOrig The new value for newBalanceOrig
   * @param nameDest The new value for nameDest
   * @param oldBalanceDest The new value for oldBalanceDest
   * @param newBalanceDest The new value for newBalanceDest
   * @param isFraud The new value for isFraud
   * @param isFlaggedFraud The new value for isFlaggedFraud
   * @param isUnauthorizedOverdraft The new value for isUnauthorizedOverdraft
   */
  public Transaction(java.lang.Integer step, java.lang.String action, java.lang.Double amount, java.lang.String nameOrig, java.lang.Double oldBalanceOrig, java.lang.Double newBalanceOrig, java.lang.String nameDest, java.lang.Double oldBalanceDest, java.lang.Double newBalanceDest, java.lang.Boolean isFraud, java.lang.Boolean isFlaggedFraud, java.lang.Boolean isUnauthorizedOverdraft) {
    this.step = step;
    this.action = action;
    this.amount = amount;
    this.nameOrig = nameOrig;
    this.oldBalanceOrig = oldBalanceOrig;
    this.newBalanceOrig = newBalanceOrig;
    this.nameDest = nameDest;
    this.oldBalanceDest = oldBalanceDest;
    this.newBalanceDest = newBalanceDest;
    this.isFraud = isFraud;
    this.isFlaggedFraud = isFlaggedFraud;
    this.isUnauthorizedOverdraft = isUnauthorizedOverdraft;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return step;
    case 1: return action;
    case 2: return amount;
    case 3: return nameOrig;
    case 4: return oldBalanceOrig;
    case 5: return newBalanceOrig;
    case 6: return nameDest;
    case 7: return oldBalanceDest;
    case 8: return newBalanceDest;
    case 9: return isFraud;
    case 10: return isFlaggedFraud;
    case 11: return isUnauthorizedOverdraft;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: step = (java.lang.Integer)value$; break;
    case 1: action = (java.lang.String)value$; break;
    case 2: amount = (java.lang.Double)value$; break;
    case 3: nameOrig = (java.lang.String)value$; break;
    case 4: oldBalanceOrig = (java.lang.Double)value$; break;
    case 5: newBalanceOrig = (java.lang.Double)value$; break;
    case 6: nameDest = (java.lang.String)value$; break;
    case 7: oldBalanceDest = (java.lang.Double)value$; break;
    case 8: newBalanceDest = (java.lang.Double)value$; break;
    case 9: isFraud = (java.lang.Boolean)value$; break;
    case 10: isFlaggedFraud = (java.lang.Boolean)value$; break;
    case 11: isUnauthorizedOverdraft = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'step' field.
   * @return The value of the 'step' field.
   */
  public java.lang.Integer getStep() {
    return step;
  }

  /**
   * Sets the value of the 'step' field.
   * @param value the value to set.
   */
  public void setStep(java.lang.Integer value) {
    this.step = value;
  }

  /**
   * Gets the value of the 'action' field.
   * @return The value of the 'action' field.
   */
  public java.lang.String getAction() {
    return action;
  }

  /**
   * Sets the value of the 'action' field.
   * @param value the value to set.
   */
  public void setAction(java.lang.String value) {
    this.action = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The value of the 'amount' field.
   */
  public java.lang.Double getAmount() {
    return amount;
  }

  /**
   * Sets the value of the 'amount' field.
   * @param value the value to set.
   */
  public void setAmount(java.lang.Double value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'nameOrig' field.
   * @return The value of the 'nameOrig' field.
   */
  public java.lang.String getNameOrig() {
    return nameOrig;
  }

  /**
   * Sets the value of the 'nameOrig' field.
   * @param value the value to set.
   */
  public void setNameOrig(java.lang.String value) {
    this.nameOrig = value;
  }

  /**
   * Gets the value of the 'oldBalanceOrig' field.
   * @return The value of the 'oldBalanceOrig' field.
   */
  public java.lang.Double getOldBalanceOrig() {
    return oldBalanceOrig;
  }

  /**
   * Sets the value of the 'oldBalanceOrig' field.
   * @param value the value to set.
   */
  public void setOldBalanceOrig(java.lang.Double value) {
    this.oldBalanceOrig = value;
  }

  /**
   * Gets the value of the 'newBalanceOrig' field.
   * @return The value of the 'newBalanceOrig' field.
   */
  public java.lang.Double getNewBalanceOrig() {
    return newBalanceOrig;
  }

  /**
   * Sets the value of the 'newBalanceOrig' field.
   * @param value the value to set.
   */
  public void setNewBalanceOrig(java.lang.Double value) {
    this.newBalanceOrig = value;
  }

  /**
   * Gets the value of the 'nameDest' field.
   * @return The value of the 'nameDest' field.
   */
  public java.lang.String getNameDest() {
    return nameDest;
  }

  /**
   * Sets the value of the 'nameDest' field.
   * @param value the value to set.
   */
  public void setNameDest(java.lang.String value) {
    this.nameDest = value;
  }

  /**
   * Gets the value of the 'oldBalanceDest' field.
   * @return The value of the 'oldBalanceDest' field.
   */
  public java.lang.Double getOldBalanceDest() {
    return oldBalanceDest;
  }

  /**
   * Sets the value of the 'oldBalanceDest' field.
   * @param value the value to set.
   */
  public void setOldBalanceDest(java.lang.Double value) {
    this.oldBalanceDest = value;
  }

  /**
   * Gets the value of the 'newBalanceDest' field.
   * @return The value of the 'newBalanceDest' field.
   */
  public java.lang.Double getNewBalanceDest() {
    return newBalanceDest;
  }

  /**
   * Sets the value of the 'newBalanceDest' field.
   * @param value the value to set.
   */
  public void setNewBalanceDest(java.lang.Double value) {
    this.newBalanceDest = value;
  }

  /**
   * Gets the value of the 'isFraud' field.
   * @return The value of the 'isFraud' field.
   */
  public java.lang.Boolean getIsFraud() {
    return isFraud;
  }

  /**
   * Sets the value of the 'isFraud' field.
   * @param value the value to set.
   */
  public void setIsFraud(java.lang.Boolean value) {
    this.isFraud = value;
  }

  /**
   * Gets the value of the 'isFlaggedFraud' field.
   * @return The value of the 'isFlaggedFraud' field.
   */
  public java.lang.Boolean getIsFlaggedFraud() {
    return isFlaggedFraud;
  }

  /**
   * Sets the value of the 'isFlaggedFraud' field.
   * @param value the value to set.
   */
  public void setIsFlaggedFraud(java.lang.Boolean value) {
    this.isFlaggedFraud = value;
  }

  /**
   * Gets the value of the 'isUnauthorizedOverdraft' field.
   * @return The value of the 'isUnauthorizedOverdraft' field.
   */
  public java.lang.Boolean getIsUnauthorizedOverdraft() {
    return isUnauthorizedOverdraft;
  }

  /**
   * Sets the value of the 'isUnauthorizedOverdraft' field.
   * @param value the value to set.
   */
  public void setIsUnauthorizedOverdraft(java.lang.Boolean value) {
    this.isUnauthorizedOverdraft = value;
  }

  /**
   * Creates a new Transaction RecordBuilder.
   * @return A new Transaction RecordBuilder
   */
  public static org.paysim.paysim.avro.generated.Transaction.Builder newBuilder() {
    return new org.paysim.paysim.avro.generated.Transaction.Builder();
  }

  /**
   * Creates a new Transaction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Transaction RecordBuilder
   */
  public static org.paysim.paysim.avro.generated.Transaction.Builder newBuilder(org.paysim.paysim.avro.generated.Transaction.Builder other) {
    return new org.paysim.paysim.avro.generated.Transaction.Builder(other);
  }

  /**
   * Creates a new Transaction RecordBuilder by copying an existing Transaction instance.
   * @param other The existing instance to copy.
   * @return A new Transaction RecordBuilder
   */
  public static org.paysim.paysim.avro.generated.Transaction.Builder newBuilder(org.paysim.paysim.avro.generated.Transaction other) {
    return new org.paysim.paysim.avro.generated.Transaction.Builder(other);
  }

  /**
   * RecordBuilder for Transaction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Transaction>
    implements org.apache.avro.data.RecordBuilder<Transaction> {

    private int step;
    private java.lang.String action;
    private double amount;
    private java.lang.String nameOrig;
    private double oldBalanceOrig;
    private double newBalanceOrig;
    private java.lang.String nameDest;
    private double oldBalanceDest;
    private double newBalanceDest;
    private boolean isFraud;
    private boolean isFlaggedFraud;
    private boolean isUnauthorizedOverdraft;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.paysim.paysim.avro.generated.Transaction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.step)) {
        this.step = data().deepCopy(fields()[0].schema(), other.step);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.action)) {
        this.action = data().deepCopy(fields()[1].schema(), other.action);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.amount)) {
        this.amount = data().deepCopy(fields()[2].schema(), other.amount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nameOrig)) {
        this.nameOrig = data().deepCopy(fields()[3].schema(), other.nameOrig);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.oldBalanceOrig)) {
        this.oldBalanceOrig = data().deepCopy(fields()[4].schema(), other.oldBalanceOrig);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.newBalanceOrig)) {
        this.newBalanceOrig = data().deepCopy(fields()[5].schema(), other.newBalanceOrig);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nameDest)) {
        this.nameDest = data().deepCopy(fields()[6].schema(), other.nameDest);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.oldBalanceDest)) {
        this.oldBalanceDest = data().deepCopy(fields()[7].schema(), other.oldBalanceDest);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.newBalanceDest)) {
        this.newBalanceDest = data().deepCopy(fields()[8].schema(), other.newBalanceDest);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.isFraud)) {
        this.isFraud = data().deepCopy(fields()[9].schema(), other.isFraud);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.isFlaggedFraud)) {
        this.isFlaggedFraud = data().deepCopy(fields()[10].schema(), other.isFlaggedFraud);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isUnauthorizedOverdraft)) {
        this.isUnauthorizedOverdraft = data().deepCopy(fields()[11].schema(), other.isUnauthorizedOverdraft);
        fieldSetFlags()[11] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Transaction instance
     * @param other The existing instance to copy.
     */
    private Builder(org.paysim.paysim.avro.generated.Transaction other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.step)) {
        this.step = data().deepCopy(fields()[0].schema(), other.step);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.action)) {
        this.action = data().deepCopy(fields()[1].schema(), other.action);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.amount)) {
        this.amount = data().deepCopy(fields()[2].schema(), other.amount);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nameOrig)) {
        this.nameOrig = data().deepCopy(fields()[3].schema(), other.nameOrig);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.oldBalanceOrig)) {
        this.oldBalanceOrig = data().deepCopy(fields()[4].schema(), other.oldBalanceOrig);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.newBalanceOrig)) {
        this.newBalanceOrig = data().deepCopy(fields()[5].schema(), other.newBalanceOrig);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nameDest)) {
        this.nameDest = data().deepCopy(fields()[6].schema(), other.nameDest);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.oldBalanceDest)) {
        this.oldBalanceDest = data().deepCopy(fields()[7].schema(), other.oldBalanceDest);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.newBalanceDest)) {
        this.newBalanceDest = data().deepCopy(fields()[8].schema(), other.newBalanceDest);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.isFraud)) {
        this.isFraud = data().deepCopy(fields()[9].schema(), other.isFraud);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.isFlaggedFraud)) {
        this.isFlaggedFraud = data().deepCopy(fields()[10].schema(), other.isFlaggedFraud);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isUnauthorizedOverdraft)) {
        this.isUnauthorizedOverdraft = data().deepCopy(fields()[11].schema(), other.isUnauthorizedOverdraft);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'step' field.
      * @return The value.
      */
    public java.lang.Integer getStep() {
      return step;
    }

    /**
      * Sets the value of the 'step' field.
      * @param value The value of 'step'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setStep(int value) {
      validate(fields()[0], value);
      this.step = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'step' field has been set.
      * @return True if the 'step' field has been set, false otherwise.
      */
    public boolean hasStep() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'step' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearStep() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'action' field.
      * @return The value.
      */
    public java.lang.String getAction() {
      return action;
    }

    /**
      * Sets the value of the 'action' field.
      * @param value The value of 'action'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setAction(java.lang.String value) {
      validate(fields()[1], value);
      this.action = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'action' field has been set.
      * @return True if the 'action' field has been set, false otherwise.
      */
    public boolean hasAction() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'action' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearAction() {
      action = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * @return The value.
      */
    public java.lang.Double getAmount() {
      return amount;
    }

    /**
      * Sets the value of the 'amount' field.
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setAmount(double value) {
      validate(fields()[2], value);
      this.amount = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'amount' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearAmount() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'nameOrig' field.
      * @return The value.
      */
    public java.lang.String getNameOrig() {
      return nameOrig;
    }

    /**
      * Sets the value of the 'nameOrig' field.
      * @param value The value of 'nameOrig'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setNameOrig(java.lang.String value) {
      validate(fields()[3], value);
      this.nameOrig = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'nameOrig' field has been set.
      * @return True if the 'nameOrig' field has been set, false otherwise.
      */
    public boolean hasNameOrig() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'nameOrig' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearNameOrig() {
      nameOrig = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'oldBalanceOrig' field.
      * @return The value.
      */
    public java.lang.Double getOldBalanceOrig() {
      return oldBalanceOrig;
    }

    /**
      * Sets the value of the 'oldBalanceOrig' field.
      * @param value The value of 'oldBalanceOrig'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setOldBalanceOrig(double value) {
      validate(fields()[4], value);
      this.oldBalanceOrig = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'oldBalanceOrig' field has been set.
      * @return True if the 'oldBalanceOrig' field has been set, false otherwise.
      */
    public boolean hasOldBalanceOrig() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'oldBalanceOrig' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearOldBalanceOrig() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'newBalanceOrig' field.
      * @return The value.
      */
    public java.lang.Double getNewBalanceOrig() {
      return newBalanceOrig;
    }

    /**
      * Sets the value of the 'newBalanceOrig' field.
      * @param value The value of 'newBalanceOrig'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setNewBalanceOrig(double value) {
      validate(fields()[5], value);
      this.newBalanceOrig = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'newBalanceOrig' field has been set.
      * @return True if the 'newBalanceOrig' field has been set, false otherwise.
      */
    public boolean hasNewBalanceOrig() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'newBalanceOrig' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearNewBalanceOrig() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'nameDest' field.
      * @return The value.
      */
    public java.lang.String getNameDest() {
      return nameDest;
    }

    /**
      * Sets the value of the 'nameDest' field.
      * @param value The value of 'nameDest'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setNameDest(java.lang.String value) {
      validate(fields()[6], value);
      this.nameDest = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'nameDest' field has been set.
      * @return True if the 'nameDest' field has been set, false otherwise.
      */
    public boolean hasNameDest() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'nameDest' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearNameDest() {
      nameDest = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'oldBalanceDest' field.
      * @return The value.
      */
    public java.lang.Double getOldBalanceDest() {
      return oldBalanceDest;
    }

    /**
      * Sets the value of the 'oldBalanceDest' field.
      * @param value The value of 'oldBalanceDest'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setOldBalanceDest(double value) {
      validate(fields()[7], value);
      this.oldBalanceDest = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'oldBalanceDest' field has been set.
      * @return True if the 'oldBalanceDest' field has been set, false otherwise.
      */
    public boolean hasOldBalanceDest() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'oldBalanceDest' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearOldBalanceDest() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'newBalanceDest' field.
      * @return The value.
      */
    public java.lang.Double getNewBalanceDest() {
      return newBalanceDest;
    }

    /**
      * Sets the value of the 'newBalanceDest' field.
      * @param value The value of 'newBalanceDest'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setNewBalanceDest(double value) {
      validate(fields()[8], value);
      this.newBalanceDest = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'newBalanceDest' field has been set.
      * @return True if the 'newBalanceDest' field has been set, false otherwise.
      */
    public boolean hasNewBalanceDest() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'newBalanceDest' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearNewBalanceDest() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'isFraud' field.
      * @return The value.
      */
    public java.lang.Boolean getIsFraud() {
      return isFraud;
    }

    /**
      * Sets the value of the 'isFraud' field.
      * @param value The value of 'isFraud'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setIsFraud(boolean value) {
      validate(fields()[9], value);
      this.isFraud = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'isFraud' field has been set.
      * @return True if the 'isFraud' field has been set, false otherwise.
      */
    public boolean hasIsFraud() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'isFraud' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearIsFraud() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'isFlaggedFraud' field.
      * @return The value.
      */
    public java.lang.Boolean getIsFlaggedFraud() {
      return isFlaggedFraud;
    }

    /**
      * Sets the value of the 'isFlaggedFraud' field.
      * @param value The value of 'isFlaggedFraud'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setIsFlaggedFraud(boolean value) {
      validate(fields()[10], value);
      this.isFlaggedFraud = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'isFlaggedFraud' field has been set.
      * @return True if the 'isFlaggedFraud' field has been set, false otherwise.
      */
    public boolean hasIsFlaggedFraud() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'isFlaggedFraud' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearIsFlaggedFraud() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'isUnauthorizedOverdraft' field.
      * @return The value.
      */
    public java.lang.Boolean getIsUnauthorizedOverdraft() {
      return isUnauthorizedOverdraft;
    }

    /**
      * Sets the value of the 'isUnauthorizedOverdraft' field.
      * @param value The value of 'isUnauthorizedOverdraft'.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder setIsUnauthorizedOverdraft(boolean value) {
      validate(fields()[11], value);
      this.isUnauthorizedOverdraft = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'isUnauthorizedOverdraft' field has been set.
      * @return True if the 'isUnauthorizedOverdraft' field has been set, false otherwise.
      */
    public boolean hasIsUnauthorizedOverdraft() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'isUnauthorizedOverdraft' field.
      * @return This builder.
      */
    public org.paysim.paysim.avro.generated.Transaction.Builder clearIsUnauthorizedOverdraft() {
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Transaction build() {
      try {
        Transaction record = new Transaction();
        record.step = fieldSetFlags()[0] ? this.step : (java.lang.Integer) defaultValue(fields()[0]);
        record.action = fieldSetFlags()[1] ? this.action : (java.lang.String) defaultValue(fields()[1]);
        record.amount = fieldSetFlags()[2] ? this.amount : (java.lang.Double) defaultValue(fields()[2]);
        record.nameOrig = fieldSetFlags()[3] ? this.nameOrig : (java.lang.String) defaultValue(fields()[3]);
        record.oldBalanceOrig = fieldSetFlags()[4] ? this.oldBalanceOrig : (java.lang.Double) defaultValue(fields()[4]);
        record.newBalanceOrig = fieldSetFlags()[5] ? this.newBalanceOrig : (java.lang.Double) defaultValue(fields()[5]);
        record.nameDest = fieldSetFlags()[6] ? this.nameDest : (java.lang.String) defaultValue(fields()[6]);
        record.oldBalanceDest = fieldSetFlags()[7] ? this.oldBalanceDest : (java.lang.Double) defaultValue(fields()[7]);
        record.newBalanceDest = fieldSetFlags()[8] ? this.newBalanceDest : (java.lang.Double) defaultValue(fields()[8]);
        record.isFraud = fieldSetFlags()[9] ? this.isFraud : (java.lang.Boolean) defaultValue(fields()[9]);
        record.isFlaggedFraud = fieldSetFlags()[10] ? this.isFlaggedFraud : (java.lang.Boolean) defaultValue(fields()[10]);
        record.isUnauthorizedOverdraft = fieldSetFlags()[11] ? this.isUnauthorizedOverdraft : (java.lang.Boolean) defaultValue(fields()[11]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Transaction>
    WRITER$ = (org.apache.avro.io.DatumWriter<Transaction>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Transaction>
    READER$ = (org.apache.avro.io.DatumReader<Transaction>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
